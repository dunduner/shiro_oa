<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="springboot.oa.dao.TbHjryMapper">
  <resultMap id="BaseResultMap" type="springboot.oa.domain.TbHjry">
    <id column="id" jdbcType="INTEGER" property="id" />
    <result column="hjsf" jdbcType="VARCHAR" property="hjsf" />
    <result column="hjryxm" jdbcType="VARCHAR" property="hjryxm" />
    <result column="hjzw" jdbcType="VARCHAR" property="hjzw" />
    <result column="hjdz" jdbcType="VARCHAR" property="hjdz" />
    <result column="hjyx" jdbcType="VARCHAR" property="hjyx" />
    <result column="hjlxdh" jdbcType="VARCHAR" property="hjlxdh" />

  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    id,hjsf,hjryxm,hjzw,hjdz,hjyx,hjlxdh
  </sql>
  <select id="selectByExample" parameterType="springboot.oa.domain.TbHjryExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from tb_hjry
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from tb_hjry
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from tb_hjry
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="springboot.oa.domain.TbHjryExample">
    delete from tb_hjry
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="springboot.oa.domain.TbHjry">
    insert into tb_hjry (id, hjsf,hjryxm,hjzw,hjdz,hjyx,hjlxdh
      )
    values (#{id,jdbcType=INTEGER}, #{hjsf,jdbcType=VARCHAR}, #{hjryxm,jdbcType=VARCHAR},#{hjzw,jdbcType=VARCHAR},
    #{hjdz,jdbcType=VARCHAR},#{hjyx,jdbcType=VARCHAR},#{hjlxdh,jdbcType=VARCHAR}
      )
  </insert>
  <insert id="insertSelective" parameterType="springboot.oa.domain.TbHjry">
    insert into tb_hjry
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        id,
      </if>
      <if test="hjsf != null">
        hjsf,
      </if>
      <if test="hjryxm != null">
        hjryxm,
      </if>
      <if test="hjzw != null">
        hjzw,
      </if>
      <if test="hjdz != null">
        hjdz,
      </if>
      <if test="hjyx != null">
        hjyx,
      </if>
      <if test="hjlxdh != null">
        hjlxdh,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="id != null">
        #{id,jdbcType=INTEGER},
      </if>
      <if test="hjsf != null">
        #{hjsf,jdbcType=VARCHAR},
      </if>
      <if test="hjryxm != null">
        #{hjryxm,jdbcType=VARCHAR},
      </if>
      <if test="hjzw != null">
        #{hjzw,jdbcType=VARCHAR},
      </if>
      <if test="hjdz != null">
        #{hjdz,jdbcType=VARCHAR},
      </if>
      <if test="hjyx != null">
        #{hjyx,jdbcType=VARCHAR},
      </if>
      <if test="hjlxdh != null">
        #{hjlxdh,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="springboot.oa.domain.TbHjryExample" resultType="java.lang.Long">
    select count(*) from tb_hjry
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update tb_hjry
    <set>
      <if test="record.id != null">
        id = #{record.id,jdbcType=INTEGER},
      </if>
      <if test="record.hjsf != null">
        hjsf = #{record.hjsf,jdbcType=VARCHAR},
      </if>
      <if test="record.hjryxm != null">
        hjryxm = #{record.hjryxm,jdbcType=VARCHAR},
      </if>
      <if test="record.hjzw != null">
        hjzw = #{record.hjzw,jdbcType=VARCHAR},
      </if>
      <if test="record.hjdz != null">
        hjdz = #{record.hjdz,jdbcType=VARCHAR},
      </if>
      <if test="record.hjyx != null">
        hjyx = #{record.hjyx,jdbcType=VARCHAR},
      </if>
      <if test="record.hjlxdh != null">
        hjlxdh = #{record.hjlxdh,jdbcType=VARCHAR},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update tb_hjry
    set id = #{record.id,jdbcType=INTEGER},
      hjsf = #{record.hjsf,jdbcType=VARCHAR},
      hjryxm = #{record.hjryxm,jdbcType=VARCHAR},
    hjzw = #{record.hjzw,jdbcType=VARCHAR},
    hjdz = #{record.hjdz,jdbcType=VARCHAR},
    hjyx = #{record.hjyx,jdbcType=VARCHAR},
    hjlxdh = #{record.hjlxdh,jdbcType=VARCHAR},
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="springboot.oa.domain.TbHjry">
    update tb_hjry
    <set>
      <if test="hjsf != null">
        hjsf = #{hjsf,jdbcType=VARCHAR},
      </if>
      <if test="hjryxm != null">
        hjryxm = #{hjryxm,jdbcType=VARCHAR},
      </if>
      <if test="hjzw != null">
      hjzw = #{hjzw,jdbcType=VARCHAR},
    </if>
      <if test="hjdz != null">
        hjdz = #{hjdz,jdbcType=VARCHAR},
      </if>
      <if test="hjyx != null">
        hjyx = #{hjyx,jdbcType=VARCHAR},
      </if>
      <if test="hjlxdh != null">
        hjlxdh = #{hjlxdh,jdbcType=VARCHAR},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="springboot.oa.domain.TbHjry">
    update tb_hjry
    set hjsf = #{hjsf,jdbcType=VARCHAR},
      hjryxm = #{hjryxm,jdbcType=VARCHAR},
       hjzw = #{hjzw,jdbcType=VARCHAR},
        hjdz = #{hjdz,jdbcType=VARCHAR},
         hjyx = #{hjyx,jdbcType=VARCHAR},
          hjlxdh = #{hjlxdh,jdbcType=VARCHAR}
    where id = #{id,jdbcType=INTEGER}
  </update>
  
  <select id="selectPage" resultMap="BaseResultMap"
		parameterType="map">
		select * from tb_hjry  limit #{rowStart},#{rowEnd}
	</select>

	<select id="selectPageByName" resultMap="BaseResultMap"
		parameterType="map">
		select * from tb_hjry  where hjryxm like #{hjryxm} limit #{rowStart},#{rowEnd}
	</select>

  <select id="selectLikeCount" resultType="int">
    select COUNT(*) from tb_hjry where hjryxm like #{hjryxm}
  </select>

</mapper>