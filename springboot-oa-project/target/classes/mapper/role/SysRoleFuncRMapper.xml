<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="springboot.oa.dao.role.SysRoleFuncRMapper" >
  <resultMap id="BaseResultMap" type="springboot.oa.domain.role.SysRoleFuncR" >
    <id column="ID" property="id" jdbcType="VARCHAR" />
    <result column="ROLE_ID" property="roleId" jdbcType="VARCHAR" />
    <result column="FUNC_ID" property="funcId" jdbcType="VARCHAR" />
  </resultMap>
  <sql id="Example_Where_Clause" >
    <where >
      <foreach collection="oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause" >
    <where >
      <foreach collection="example.oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List" >
    <if test="fields == null" >
      ID, ROLE_ID, FUNC_ID
    </if>
    <if test="fields != null" >
      ${fields}
    </if>
  </sql>
  <select id="selectByExample" resultMap="BaseResultMap" parameterType="springboot.oa.domain.role.SysRoleFuncRExample" >
    select
    <if test="distinct" >
      distinct
    </if>
    <include refid="Base_Column_List" />
    from sys_role_func_r
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null" >
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.String" >
    select 
    ID,ROLE_ID,FUNC_ID
    from sys_role_func_r
    where ID = #{id,jdbcType=VARCHAR}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.String" >
    delete from sys_role_func_r
    where ID = #{id,jdbcType=VARCHAR}
  </delete>
  <delete id="deleteByExample" parameterType="springboot.oa.domain.role.SysRoleFuncRExample" >
    delete from sys_role_func_r
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="springboot.oa.domain.role.SysRoleFuncR" >
    insert into sys_role_func_r (ID, ROLE_ID, FUNC_ID
      )
    values (#{id,jdbcType=VARCHAR}, #{roleId,jdbcType=VARCHAR}, #{funcId,jdbcType=VARCHAR}
      )
  </insert>
  <insert id="insertSelective" parameterType="springboot.oa.domain.role.SysRoleFuncR" >
    insert into sys_role_func_r
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        ID,
      </if>
      <if test="roleId != null" >
        ROLE_ID,
      </if>
      <if test="funcId != null" >
        FUNC_ID,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        #{id,jdbcType=VARCHAR},
      </if>
      <if test="roleId != null" >
        #{roleId,jdbcType=VARCHAR},
      </if>
      <if test="funcId != null" >
        #{funcId,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="springboot.oa.domain.role.SysRoleFuncRExample" resultType="java.lang.Integer" >
    select count(*) from sys_role_func_r
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map" >
    update sys_role_func_r
    <set >
      <if test="record.id != null" >
        ID = #{record.id,jdbcType=VARCHAR},
      </if>
      <if test="record.roleId != null" >
        ROLE_ID = #{record.roleId,jdbcType=VARCHAR},
      </if>
      <if test="record.funcId != null" >
        FUNC_ID = #{record.funcId,jdbcType=VARCHAR},
      </if>
    </set>
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map" >
    update sys_role_func_r
    set ID = #{record.id,jdbcType=VARCHAR},
      ROLE_ID = #{record.roleId,jdbcType=VARCHAR},
      FUNC_ID = #{record.funcId,jdbcType=VARCHAR}
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="springboot.oa.domain.role.SysRoleFuncR" >
    update sys_role_func_r
    <set >
      <if test="roleId != null" >
        ROLE_ID = #{roleId,jdbcType=VARCHAR},
      </if>
      <if test="funcId != null" >
        FUNC_ID = #{funcId,jdbcType=VARCHAR},
      </if>
    </set>
    where ID = #{id,jdbcType=VARCHAR}
  </update>
  <update id="updateByPrimaryKey" parameterType="springboot.oa.domain.role.SysRoleFuncR" >
    update sys_role_func_r
    set ROLE_ID = #{roleId,jdbcType=VARCHAR},
      FUNC_ID = #{funcId,jdbcType=VARCHAR}
    where ID = #{id,jdbcType=VARCHAR}
  </update>
</mapper>