## server端口号配置，避免与service冲突
server.port=10000
server.tomcat.max-threads=1000
server.tomcat.max-connections=1000


spring.datasource.url=jdbc:mysql://49.235.166.226:3521/shiro_oa?useUnicode=true&amp;characterEncoding=utf-8
spring.datasource.username=root
spring.datasource.password=3edc#EDC
spring.datasource.driver-class-name=com.mysql.jdbc.Driver
###################以下为druid增加的配置###########################
spring.datasource.type=com.alibaba.druid.pool.DruidDataSource
# 下面为连接池的补充设置，应用到上面所有数据源中
# 初始化大小，最小，最大
spring.datasource.initialSize=10
spring.datasource.minIdle=100
spring.datasource.maxActive=1000
# 配置获取连接等待超时的时间
spring.datasource.maxWait=60000
# 配置间隔多久才进行一次检测，检测需要关闭的空闲连接，单位是毫秒
spring.datasource.timeBetweenEvictionRunsMillis=60000
# 配置一个连接在池中最小生存的时间，单位是毫秒
spring.datasource.minEvictableIdleTimeMillis=300000
spring.datasource.validationQuery=SELECT 1 FROM DUAL
spring.datasource.testWhileIdle=true
spring.datasource.testOnBorrow=false
spring.datasource.testOnReturn=false
# 打开PSCache，并且指定每个连接上PSCache的大小
spring.datasource.poolPreparedStatements=true
spring.datasource.maxPoolPreparedStatementPerConnectionSize=20
# 配置监控统计拦截的filters，去掉后监控界面sql无法统计，'wall'用于防火墙
spring.datasource.filters=stat,wall,log4j
# 通过connectProperties属性来打开mergeSql功能；慢SQL记录
spring.datasource.connectionProperties=druid.stat.mergeSql=true;druid.stat.slowSqlMillis=5000
# 合并多个DruidDataSource的监控数据
#spring.datasource.useGlobalDataSourceStat=true
###############以上为配置druid添加的配置########################################
file.upload.basepath=c:/oa/upload/data
file.upload.downpath=http://localhost:8091
##指向mapper的xml文件位置
mybatis.mapper-locations=classpath:mapper/*/*Mapper.xml
#cloud.gjjpt.mapper.*.*Mapper.xml
##指向定义的实体类包名
mybatis.type-aliases-package=springboot.oa.domain.*

# 页面默认前缀目录
spring.mvc.view.prefix=/views/
# 响应页面默认后缀
spring.mvc.view.suffix=.jsp
spring.mvc.date-format=yyyy-MM-dd
spring.jackson.date-format=yyyy-MM-dd
spring.jackson.time-zone=GMT+8

logging.path=/root/logs
#指向日志配置文件的位置
logging.config=classpath:logback-spring.xml
#控制台打印日志格式设置，注意在logback-spring.xml里用CONSOLE_LOG_PATTERN才能获取到
logging.pattern.console=[%d{yyyy-MM-dd HH:mm:ss}] -- [%-5p]: [%c] -- %m%n
#文件打印日志格式设置，注意在logback-spring.xml里用FILE_LOG_PATTERN才能获取到
logging.pattern.file=[%d{yyyy-MM-dd HH:mm:ss}] -- [%-5p]: [%c] -- %m%n
